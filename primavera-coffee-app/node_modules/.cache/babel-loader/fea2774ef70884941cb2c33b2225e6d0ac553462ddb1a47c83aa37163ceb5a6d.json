{"ast":null,"code":"var _jsxFileName = \"/Users/nick/primavera-coffee/primavera-coffee-app/src/Components/EarningsExpenseInfo/earningsExpenseInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Container, Heading, Stat, StatLabel, StatNumber, StatHelpText, StatArrow, StatGroup } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EarningsExpenseInfo = () => {\n  _s();\n  const [earnings, setEarnings] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [totalExpenses, setTotalExpenses] = useState(0.0);\n  const [totalEarnings, setTotalEarnings] = useState(0.0);\n  const [totalPercentages, setTotalPercentages] = useState(0.0);\n  const [netProfits, setNetProfits] = useState(0.0);\n  const [changeStatArrow, setChangeStatArrow] = useState('');\n  const [numValuesBgChange, setNumValuesBgChange] = useState('');\n  const [error, setError] = useState(null);\n  const fetchData = async () => {\n    try {\n      const expenseResponse = await fetch('http://localhost:3001/api/expenseView');\n      const expenseData = await expenseResponse.json();\n      const expenses = parseFloat(expenseData.totalExpenses.toFixed(2));\n      setTotalExpenses(expenses);\n      const earningResponse = await fetch('http://localhost:3001/api/earningView');\n      const earningData = await earningResponse.json();\n      const earnings = parseFloat(earningData.totalEarnings.toFixed(2));\n      setTotalEarnings(earnings);\n      updateNetVsLossPercentageAndNetProfit(expenses, earnings);\n    } catch (error) {\n      setError(error);\n    }\n  };\n  const updateNetVsLossPercentageAndNetProfit = (expenses, earnings) => {\n    const netVsLossPercentage = totalExpenses !== 0 ? (totalEarnings - totalExpenses) / totalExpenses * 100 : 0;\n    const changeStatArrowValue = netVsLossPercentage > 0 ? 'increase' : netVsLossPercentage === 0 ? ' ' : 'decrease';\n    const netProfit = totalEarnings - totalExpenses;\n    const changeScreenBgBasedOnNet = netVsLossPercentage === 0 ? '#ffffff' : netVsLossPercentage > 0 ? 'teal.50' : 'red.50';\n    setTotalPercentages(netVsLossPercentage.toFixed(2));\n    setNetProfits(netProfit.toFixed(2));\n    setChangeStatArrow(changeStatArrowValue);\n    setNumValuesBgChange(changeScreenBgBasedOnNet);\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    bg: numValuesBgChange,\n    p: 2,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(StatGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Stat, {\n          children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n            children: \"Expenses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n            children: [\"$ \", totalExpenses]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stat, {\n          children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n            children: \"Earnings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n            children: [\"$\", totalEarnings]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatGroup, {\n        children: /*#__PURE__*/_jsxDEV(Stat, {\n          children: /*#__PURE__*/_jsxDEV(StatHelpText, {\n            children: /*#__PURE__*/_jsxDEV(Heading, {\n              size: \"4xl\",\n              children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n                children: \"Net\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Heading, {\n                size: \"2xl\",\n                children: [\"$ \", netProfits]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(StatArrow, {\n                type: changeStatArrow\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 15\n              }, this), totalPercentages, \" %\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(EarningsExpenseInfo, \"F6yh6UBJouB0O2lGgh+AUKVMs50=\");\n_c = EarningsExpenseInfo;\nexport default EarningsExpenseInfo;\nvar _c;\n$RefreshReg$(_c, \"EarningsExpenseInfo\");","map":{"version":3,"names":["React","useState","useEffect","Box","Container","Heading","Stat","StatLabel","StatNumber","StatHelpText","StatArrow","StatGroup","jsxDEV","_jsxDEV","EarningsExpenseInfo","_s","earnings","setEarnings","expenses","setExpenses","totalExpenses","setTotalExpenses","totalEarnings","setTotalEarnings","totalPercentages","setTotalPercentages","netProfits","setNetProfits","changeStatArrow","setChangeStatArrow","numValuesBgChange","setNumValuesBgChange","error","setError","fetchData","expenseResponse","fetch","expenseData","json","parseFloat","toFixed","earningResponse","earningData","updateNetVsLossPercentageAndNetProfit","netVsLossPercentage","changeStatArrowValue","netProfit","changeScreenBgBasedOnNet","bg","p","children","fileName","_jsxFileName","lineNumber","columnNumber","size","type","_c","$RefreshReg$"],"sources":["/Users/nick/primavera-coffee/primavera-coffee-app/src/Components/EarningsExpenseInfo/earningsExpenseInfo.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {\n  Box,\n  Container,\n  Heading,\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  StatArrow,\n  StatGroup,\n} from '@chakra-ui/react'\n\nconst EarningsExpenseInfo = () => {\n  const[earnings, setEarnings] = useState([])\n  const [expenses, setExpenses] = useState([])\n  const [totalExpenses, setTotalExpenses] = useState(0.0)\n  const [totalEarnings, setTotalEarnings] = useState(0.0)\n  const [totalPercentages, setTotalPercentages] = useState(0.0)\n  const [netProfits, setNetProfits] = useState(0.0)\n  const [changeStatArrow, setChangeStatArrow] = useState('')\n  const [numValuesBgChange, setNumValuesBgChange] = useState('')\n  const [error, setError] = useState(null)\n\n  \n  const fetchData = async () => {\n    try {\n      const expenseResponse = await fetch('http://localhost:3001/api/expenseView')\n      const expenseData = await expenseResponse.json()\n      const expenses = parseFloat(expenseData.totalExpenses.toFixed(2))\n      setTotalExpenses(expenses)\n      \n      const earningResponse = await fetch('http://localhost:3001/api/earningView')\n      const earningData = await earningResponse.json();\n      const earnings = parseFloat(earningData.totalEarnings.toFixed(2))\n      setTotalEarnings(earnings)\n      \n      updateNetVsLossPercentageAndNetProfit(expenses, earnings)\n    } catch (error) {\n      setError(error)\n    }\n  }\n  \n  const updateNetVsLossPercentageAndNetProfit = (expenses, earnings) => {\n    const netVsLossPercentage = totalExpenses !== 0 ? ((totalEarnings - totalExpenses) / totalExpenses) * 100 : 0;\n    const changeStatArrowValue = netVsLossPercentage > 0 ? 'increase' : netVsLossPercentage === 0 ? ' ' : 'decrease'\n    const netProfit = totalEarnings - totalExpenses\n    const changeScreenBgBasedOnNet = netVsLossPercentage === 0 ? '#ffffff' : \n    netVsLossPercentage > 0 ? 'teal.50' : 'red.50'\n    \n    setTotalPercentages(netVsLossPercentage.toFixed(2))\n    setNetProfits(netProfit.toFixed(2))\n    setChangeStatArrow(changeStatArrowValue)\n    setNumValuesBgChange(changeScreenBgBasedOnNet)\n  }\n  \n  useEffect(() => {\n    fetchData()\n  }, []);\n  \n  return(\n    <Container bg={numValuesBgChange} p={2}>\n      <Box>\n        <StatGroup>\n          <Stat>\n            <StatLabel>Expenses</StatLabel>\n            <StatNumber>$ {totalExpenses}</StatNumber>\n          </Stat>\n          <Stat>\n            <StatLabel>Earnings</StatLabel>\n            <StatNumber>$ \n              {totalEarnings}\n            </StatNumber>\n          </Stat>\n        </StatGroup>\n        <StatGroup>\n          <Stat>\n          <StatHelpText>\n            <Heading size='4xl'>\n            <StatLabel>Net</StatLabel>\n              <Heading size='2xl'>$ {netProfits}</Heading>\n              <StatArrow type={changeStatArrow} />\n                {totalPercentages} %\n            </Heading>\n            </StatHelpText>\n          </Stat>\n        </StatGroup>\n      </Box>\n    </Container>\n  )\n}\n\nexport default EarningsExpenseInfo"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}