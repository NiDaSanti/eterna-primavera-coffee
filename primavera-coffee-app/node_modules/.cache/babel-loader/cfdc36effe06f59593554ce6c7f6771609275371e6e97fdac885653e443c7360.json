{"ast":null,"code":"var _jsxFileName = \"/Users/nick/primavera-coffee/primavera-coffee-app/src/Components/EarningsExpenseInfo/earningsExpenseInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Stat, StatLabel, StatNumber, StatHelpText, StatArrow, StatGroup } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EarningsExpenseInfo = () => {\n  _s();\n  const [earnings, setEarnings] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [totalExpenses, setTotalExpenses] = useState(0);\n  const [totalEarnings, setTotalEarnings] = useState(0);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch('http://localhost:3001/api/expense').then(response => response.json()).then(data => {\n      console.log(data.totalExpenses);\n      setExpenses(data.totalExpenses);\n    }).catch(error => {\n      setError(error);\n    });\n    fetch('http://localhost:3001/api/earning').then(response => response.json()).then(data => {\n      console.log(data.totalEarnings);\n      setEarnings(data.totalEarnings);\n    }).catch(error => {\n      setError(error);\n    });\n  }, []);\n  const netVsLossPercentage = (totalEarnings - totalExpenses) / totalExpenses * 100;\n  console.log(netVsLossPercentage);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Stat, {\n      children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n        children: \"Expenses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n        children: \"$\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(EarningsExpenseInfo, \"OFLQOyqSAbM+y7sHTahuwuzfDZQ=\");\n_c = EarningsExpenseInfo;\nexport default EarningsExpenseInfo;\nvar _c;\n$RefreshReg$(_c, \"EarningsExpenseInfo\");","map":{"version":3,"names":["React","useState","useEffect","Container","Stat","StatLabel","StatNumber","StatHelpText","StatArrow","StatGroup","jsxDEV","_jsxDEV","EarningsExpenseInfo","_s","earnings","setEarnings","expenses","setExpenses","totalExpenses","setTotalExpenses","totalEarnings","setTotalEarnings","error","setError","fetch","then","response","json","data","console","log","catch","netVsLossPercentage","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nick/primavera-coffee/primavera-coffee-app/src/Components/EarningsExpenseInfo/earningsExpenseInfo.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {\n  Container,\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  StatArrow,\n  StatGroup,\n} from '@chakra-ui/react'\n\nconst EarningsExpenseInfo = () => {\n  const[earnings, setEarnings] = useState([])\n  const [expenses, setExpenses] = useState([])\n  const [totalExpenses, setTotalExpenses] = useState(0)\n  const [totalEarnings, setTotalEarnings] = useState(0)\n  const [error, setError] = useState(null)\n\n  useEffect(() => {\n    fetch('http://localhost:3001/api/expense')\n      .then(response => response.json())\n      .then(data => {\n        console.log(data.totalExpenses)\n        setExpenses(data.totalExpenses)\n      })\n      .catch(error => {\n        setError(error)\n      })\n\n    fetch('http://localhost:3001/api/earning')\n      .then(response => response.json())\n      .then(data => {\n        console.log(data.totalEarnings)\n        setEarnings(data.totalEarnings)\n      })\n      .catch(error => {\n        setError(error)\n      })\n  }, [])\n  \n  const netVsLossPercentage = ((totalEarnings - totalExpenses) / totalExpenses) * 100\n  console.log(netVsLossPercentage)\n  return(\n    <Container>\n      <Stat>\n        <StatLabel>Expenses</StatLabel>\n        <StatNumber>$</StatNumber>\n      </Stat>\n    </Container>\n  )\n}\n\nexport default EarningsExpenseInfo"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SACEC,SAAS,EACTC,IAAI,EACJC,SAAS,EACTC,UAAU,EACVC,YAAY,EACZC,SAAS,EACTC,SAAS,QACJ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAK,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACmB,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdsB,KAAK,CAAC,mCAAmC,CAAC,CACvCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACV,aAAa,CAAC;MAC/BD,WAAW,CAACW,IAAI,CAACV,aAAa,CAAC;IACjC,CAAC,CAAC,CACDa,KAAK,CAACT,KAAK,IAAI;MACdC,QAAQ,CAACD,KAAK,CAAC;IACjB,CAAC,CAAC;IAEJE,KAAK,CAAC,mCAAmC,CAAC,CACvCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACR,aAAa,CAAC;MAC/BL,WAAW,CAACa,IAAI,CAACR,aAAa,CAAC;IACjC,CAAC,CAAC,CACDW,KAAK,CAACT,KAAK,IAAI;MACdC,QAAQ,CAACD,KAAK,CAAC;IACjB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,mBAAmB,GAAI,CAACZ,aAAa,GAAGF,aAAa,IAAIA,aAAa,GAAI,GAAG;EACnFW,OAAO,CAACC,GAAG,CAACE,mBAAmB,CAAC;EAChC,oBACErB,OAAA,CAACR,SAAS;IAAA8B,QAAA,eACRtB,OAAA,CAACP,IAAI;MAAA6B,QAAA,gBACHtB,OAAA,CAACN,SAAS;QAAA4B,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC,eAC/B1B,OAAA,CAACL,UAAU;QAAA2B,QAAA,EAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEhB,CAAC;AAAAxB,EAAA,CAvCKD,mBAAmB;AAAA0B,EAAA,GAAnB1B,mBAAmB;AAyCzB,eAAeA,mBAAmB;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}