{"ast":null,"code":"var _jsxFileName = \"/Users/nick/primavera-coffee/primavera-coffee-app/src/Components/EarningsExpenseInfo/earningsExpenseInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Card, Container, Heading, Stat, StatLabel, StatNumber, StatHelpText, StatArrow, StatGroup } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EarningsExpenseInfo = () => {\n  _s();\n  const [earnings, setEarnings] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [totalExpenses, setTotalExpenses] = useState(0);\n  const [totalEarnings, setTotalEarnings] = useState(0);\n  const [totalPercentages, setTotalPercentages] = useState(0.0);\n  const [changeStatArrow, setChangeStatArrow] = useState('');\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch('http://localhost:3001/api/expenseView').then(response => response.json()).then(data => {\n      console.log(data.totalExpenses.toFixed(2));\n      setExpenses(data.totalExpenses.toFixed(2));\n    }).catch(error => {\n      setError(error);\n    });\n    fetch('http://localhost:3001/api/earningView').then(response => response.json()).then(data => {\n      console.log(data.totalEarnings.toFixed(2));\n      setEarnings(data.totalEarnings.toFixed(2));\n    }).catch(error => {\n      setError(error);\n    });\n    const netVsLossPercentage = totalExpenses !== 0 ? (totalEarnings - totalExpenses) / totalExpenses * 100 : 0;\n    const changeStatArrow = netVsLossPercentage <= 0 ? 'increase' : setTotalExpenses(expenses);\n    setTotalEarnings(totalEarnings);\n    setTotalPercentages(Math.floor(netVsLossPercentage.toFixed(0)));\n    setChangeStatArrow(changeStatArrow);\n    console.log(netVsLossPercentage);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      p: 2,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(StatGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Expenses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              colorScheme: \"red\",\n              children: [\"$ \", expenses]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Stat, {\n            children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n              children: \"Earnings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n              children: [\"$\", earnings]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatGroup, {\n          children: /*#__PURE__*/_jsxDEV(Stat, {\n            textAlign: \"center\",\n            children: /*#__PURE__*/_jsxDEV(StatHelpText, {\n              children: /*#__PURE__*/_jsxDEV(Heading, {\n                size: \"4xl\",\n                as: \"h2\",\n                children: [/*#__PURE__*/_jsxDEV(StatArrow, {\n                  type: changeStatArrow\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 17\n                }, this), totalPercentages, \" %\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(EarningsExpenseInfo, \"xD+5MReWUn+5Vd4PPM2bK7MfQXY=\");\n_c = EarningsExpenseInfo;\nexport default EarningsExpenseInfo;\nvar _c;\n$RefreshReg$(_c, \"EarningsExpenseInfo\");","map":{"version":3,"names":["React","useState","useEffect","Box","Card","Container","Heading","Stat","StatLabel","StatNumber","StatHelpText","StatArrow","StatGroup","jsxDEV","_jsxDEV","EarningsExpenseInfo","_s","earnings","setEarnings","expenses","setExpenses","totalExpenses","setTotalExpenses","totalEarnings","setTotalEarnings","totalPercentages","setTotalPercentages","changeStatArrow","setChangeStatArrow","error","setError","fetch","then","response","json","data","console","log","toFixed","catch","netVsLossPercentage","Math","floor","children","p","fileName","_jsxFileName","lineNumber","columnNumber","colorScheme","textAlign","size","as","type","_c","$RefreshReg$"],"sources":["/Users/nick/primavera-coffee/primavera-coffee-app/src/Components/EarningsExpenseInfo/earningsExpenseInfo.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {\n  Box,\n  Card,\n  Container,\n  Heading,\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  StatArrow,\n  StatGroup,\n} from '@chakra-ui/react'\n\nconst EarningsExpenseInfo = () => {\n  const[earnings, setEarnings] = useState([])\n  const [expenses, setExpenses] = useState([])\n  const [totalExpenses, setTotalExpenses] = useState(0)\n  const [totalEarnings, setTotalEarnings] = useState(0)\n  const [totalPercentages, setTotalPercentages] = useState(0.0)\n  const [changeStatArrow, setChangeStatArrow] = useState('')\n  const [error, setError] = useState(null)\n\n  useEffect(() => {\n    fetch('http://localhost:3001/api/expenseView')\n      .then(response => response.json())\n      .then(data => {\n        console.log(data.totalExpenses.toFixed(2))\n        setExpenses(data.totalExpenses.toFixed(2))\n      })\n      .catch(error => {\n        setError(error)\n      })\n\n    fetch('http://localhost:3001/api/earningView')\n      .then(response => response.json())\n      .then(data => {\n        console.log(data.totalEarnings.toFixed(2))\n        setEarnings(data.totalEarnings.toFixed(2))\n      })\n      .catch(error => {\n        setError(error)\n      })\n      const netVsLossPercentage = totalExpenses !== 0 ? ((totalEarnings - totalExpenses) / totalExpenses) * 100 : 0\n      const changeStatArrow = netVsLossPercentage <= 0 ? 'increase' :\n      setTotalExpenses(expenses)\n      setTotalEarnings(totalEarnings)\n      setTotalPercentages(Math.floor(netVsLossPercentage.toFixed(0)))\n      setChangeStatArrow(changeStatArrow)\n      console.log(netVsLossPercentage)\n  }, [])\n  \n  return(\n    <Card>\n      <Container p={2}>\n        <Box>\n          <StatGroup>\n            <Stat>\n              <StatLabel>Expenses</StatLabel>\n              <StatNumber colorScheme='red'>$ {expenses}</StatNumber>\n            </Stat>\n            <Stat>\n              <StatLabel>Earnings</StatLabel>\n              <StatNumber>$ \n                {earnings}\n              </StatNumber>\n            </Stat>\n          </StatGroup>\n          <StatGroup>\n            <Stat textAlign='center'>\n            <StatHelpText>\n              <Heading size='4xl' as='h2'>\n                <StatArrow type={changeStatArrow} />\n                  {totalPercentages} %\n              </Heading>\n              </StatHelpText>\n            </Stat>\n          </StatGroup>\n        </Box>\n      </Container>\n    </Card>\n  )\n}\n\nexport default EarningsExpenseInfo"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}