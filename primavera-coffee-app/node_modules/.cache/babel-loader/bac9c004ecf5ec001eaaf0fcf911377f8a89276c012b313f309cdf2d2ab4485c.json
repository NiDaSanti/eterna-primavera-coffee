{"ast":null,"code":"var _jsxFileName = \"/Users/nick/primavera-coffee/primavera-coffee-app/src/Components/EarningsExpenseInfo/earningsExpenseInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Container, Heading, Stat, StatLabel, StatNumber, StatHelpText, StatArrow, StatGroup } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EarningsExpenseInfo = () => {\n  _s();\n  const [earnings, setEarnings] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [totalExpenses, setTotalExpenses] = useState(0.0);\n  const [totalEarnings, setTotalEarnings] = useState(0.0);\n  const [totalPercentages, setTotalPercentages] = useState(0.0);\n  const [netProfits, setNetProfits] = useState(0.0);\n  const [changeStatArrow, setChangeStatArrow] = useState('');\n  const [numValuesBgChange, setNumValuesBgChange] = useState('');\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch('http://localhost:3001/api/expenseView').then(response => response.json()).then(data => {\n      const expenses = parseFloat(data.totalExpenses.toFixed(2));\n      setTotalExpenses(expenses);\n    }).catch(error => {\n      setError(error);\n    });\n    fetch('http://localhost:3001/api/earningView').then(response => response.json()).then(data => {\n      const earnings = parseFloat(data.totalEarnings.toFixed(2));\n      setTotalEarnings(earnings);\n    }).catch(error => {\n      setError(error);\n    });\n    updateNetVsLossPercentageAndNetProfit();\n  }, [totalExpenses, totalEarnings]);\n  const updateNetVsLossPercentageAndNetProfit = () => {\n    const netVsLossPercentage = totalExpenses !== 0 ? (totalEarnings - totalExpenses) / totalExpenses * 100 : 0;\n    const changeStatArrowValue = netVsLossPercentage > 0 ? 'increase' : netVsLossPercentage === 0 ? ' ' : 'decrease';\n    const netProfit = totalEarnings - totalExpenses;\n    const changeScreenBgBasedOnNet = netVsLossPercentage === 0 ? '#ffffff' : netVsLossPercentage > 0 ? 'teal.50' : 'red.50';\n    setTotalPercentages(netVsLossPercentage.toFixed(2));\n    setNetProfits(netProfit.toFixed(2));\n    setChangeStatArrow(changeStatArrowValue);\n    setNumValuesBgChange(changeScreenBgBasedOnNet);\n  };\n\n  // useEffect(() => {\n  //   const netVsLossPercentage = totalExpenses !== 0 ? ((totalEarnings - totalExpenses) / totalExpenses) * 100 : 0;\n  //   const changeStatArrowValue = netVsLossPercentage > 0 ? 'increase' : netVsLossPercentage === 0 ? ' ' : 'decrease'\n  //   const netProfit = totalEarnings - totalExpenses\n  //   const changeScreenBgBasedOnNet = netVsLossPercentage === 0 ? '#ffffff' : \n  //   netVsLossPercentage > 0 ? 'teal.50' : 'red.50'\n\n  //   setTotalPercentages(netVsLossPercentage.toFixed(2))\n  //   setNetProfits(netProfit.toFixed(2))\n  //   setChangeStatArrow(changeStatArrowValue)\n  //   setNumValuesBgChange(changeScreenBgBasedOnNet)\n\n  //   const updateNetVsLossPercentageAndNetProfit = () => {\n  //     const net = totalEarnings - totalExpenses\n  //     const netVsLoss = (totalEarnings - totalExpenses) / totalExpenses * 100\n  //     const changeArrow = netVsLossPercentage > 0 ? 'increase' : netVsLossPercentage === 0 ? ' ' : 'decrease'\n  //     const updateScreenColor = netVsLossPercentage === 0 ? '#ffffff' : \n  //     netVsLossPercentage > 0 ? 'teal.50' : 'red.50'\n\n  //     setNetProfits(net)\n  //     setTotalPercentages(netVsLoss)\n  //     setChangeStatArrow(changeArrow)\n  //     setNumValuesBgChange(updateScreenColor)\n  //   }\n  // }, [totalExpenses, totalEarnings]);\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    bg: numValuesBgChange,\n    p: 2,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(StatGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Stat, {\n          children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n            children: \"Expenses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n            children: [\"$ \", totalExpenses]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stat, {\n          children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n            children: \"Earnings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatNumber, {\n            children: [\"$\", totalEarnings]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatGroup, {\n        children: /*#__PURE__*/_jsxDEV(Stat, {\n          children: /*#__PURE__*/_jsxDEV(StatHelpText, {\n            children: /*#__PURE__*/_jsxDEV(Heading, {\n              size: \"4xl\",\n              children: [/*#__PURE__*/_jsxDEV(StatLabel, {\n                children: \"Net\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Heading, {\n                size: \"2xl\",\n                children: [\"$ \", netProfits]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(StatArrow, {\n                type: changeStatArrow\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 15\n              }, this), totalPercentages, \" %\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(EarningsExpenseInfo, \"F6yh6UBJouB0O2lGgh+AUKVMs50=\");\n_c = EarningsExpenseInfo;\nexport default EarningsExpenseInfo;\nvar _c;\n$RefreshReg$(_c, \"EarningsExpenseInfo\");","map":{"version":3,"names":["React","useState","useEffect","Box","Container","Heading","Stat","StatLabel","StatNumber","StatHelpText","StatArrow","StatGroup","jsxDEV","_jsxDEV","EarningsExpenseInfo","_s","earnings","setEarnings","expenses","setExpenses","totalExpenses","setTotalExpenses","totalEarnings","setTotalEarnings","totalPercentages","setTotalPercentages","netProfits","setNetProfits","changeStatArrow","setChangeStatArrow","numValuesBgChange","setNumValuesBgChange","error","setError","fetch","then","response","json","data","parseFloat","toFixed","catch","updateNetVsLossPercentageAndNetProfit","netVsLossPercentage","changeStatArrowValue","netProfit","changeScreenBgBasedOnNet","bg","p","children","fileName","_jsxFileName","lineNumber","columnNumber","size","type","_c","$RefreshReg$"],"sources":["/Users/nick/primavera-coffee/primavera-coffee-app/src/Components/EarningsExpenseInfo/earningsExpenseInfo.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {\n  Box,\n  Container,\n  Heading,\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  StatArrow,\n  StatGroup,\n} from '@chakra-ui/react'\n\nconst EarningsExpenseInfo = () => {\n  const[earnings, setEarnings] = useState([])\n  const [expenses, setExpenses] = useState([])\n  const [totalExpenses, setTotalExpenses] = useState(0.0)\n  const [totalEarnings, setTotalEarnings] = useState(0.0)\n  const [totalPercentages, setTotalPercentages] = useState(0.0)\n  const [netProfits, setNetProfits] = useState(0.0)\n  const [changeStatArrow, setChangeStatArrow] = useState('')\n  const [numValuesBgChange, setNumValuesBgChange] = useState('')\n  const [error, setError] = useState(null)\n\n  useEffect(() => {\n    fetch('http://localhost:3001/api/expenseView')\n      .then(response => response.json())\n      .then(data => {\n        const expenses = parseFloat(data.totalExpenses.toFixed(2));\n        setTotalExpenses(expenses);\n      })\n      .catch(error => {\n        setError(error);\n      });\n\n    fetch('http://localhost:3001/api/earningView')\n      .then(response => response.json())\n      .then(data => {\n        const earnings = parseFloat(data.totalEarnings.toFixed(2));\n        setTotalEarnings(earnings);\n      })\n      .catch(error => {\n        setError(error);\n      });\n      updateNetVsLossPercentageAndNetProfit()\n  }, [totalExpenses, totalEarnings]);\n\n  const updateNetVsLossPercentageAndNetProfit = () => {\n    const netVsLossPercentage = totalExpenses !== 0 ? ((totalEarnings - totalExpenses) / totalExpenses) * 100 : 0;\n    const changeStatArrowValue = netVsLossPercentage > 0 ? 'increase' : netVsLossPercentage === 0 ? ' ' : 'decrease'\n    const netProfit = totalEarnings - totalExpenses\n    const changeScreenBgBasedOnNet = netVsLossPercentage === 0 ? '#ffffff' : \n    netVsLossPercentage > 0 ? 'teal.50' : 'red.50'\n    \n    setTotalPercentages(netVsLossPercentage.toFixed(2))\n    setNetProfits(netProfit.toFixed(2))\n    setChangeStatArrow(changeStatArrowValue)\n    setNumValuesBgChange(changeScreenBgBasedOnNet)\n  }\n\n  // useEffect(() => {\n  //   const netVsLossPercentage = totalExpenses !== 0 ? ((totalEarnings - totalExpenses) / totalExpenses) * 100 : 0;\n  //   const changeStatArrowValue = netVsLossPercentage > 0 ? 'increase' : netVsLossPercentage === 0 ? ' ' : 'decrease'\n  //   const netProfit = totalEarnings - totalExpenses\n  //   const changeScreenBgBasedOnNet = netVsLossPercentage === 0 ? '#ffffff' : \n  //   netVsLossPercentage > 0 ? 'teal.50' : 'red.50'\n    \n  //   setTotalPercentages(netVsLossPercentage.toFixed(2))\n  //   setNetProfits(netProfit.toFixed(2))\n  //   setChangeStatArrow(changeStatArrowValue)\n  //   setNumValuesBgChange(changeScreenBgBasedOnNet)\n    \n  //   const updateNetVsLossPercentageAndNetProfit = () => {\n  //     const net = totalEarnings - totalExpenses\n  //     const netVsLoss = (totalEarnings - totalExpenses) / totalExpenses * 100\n  //     const changeArrow = netVsLossPercentage > 0 ? 'increase' : netVsLossPercentage === 0 ? ' ' : 'decrease'\n  //     const updateScreenColor = netVsLossPercentage === 0 ? '#ffffff' : \n  //     netVsLossPercentage > 0 ? 'teal.50' : 'red.50'\n  \n  //     setNetProfits(net)\n  //     setTotalPercentages(netVsLoss)\n  //     setChangeStatArrow(changeArrow)\n  //     setNumValuesBgChange(updateScreenColor)\n  //   }\n  // }, [totalExpenses, totalEarnings]);\n  \n  \n  return(\n    <Container bg={numValuesBgChange} p={2}>\n      <Box>\n        <StatGroup>\n          <Stat>\n            <StatLabel>Expenses</StatLabel>\n            <StatNumber>$ {totalExpenses}</StatNumber>\n          </Stat>\n          <Stat>\n            <StatLabel>Earnings</StatLabel>\n            <StatNumber>$ \n              {totalEarnings}\n            </StatNumber>\n          </Stat>\n        </StatGroup>\n        <StatGroup>\n          <Stat>\n          <StatHelpText>\n            <Heading size='4xl'>\n            <StatLabel>Net</StatLabel>\n              <Heading size='2xl'>$ {netProfits}</Heading>\n              <StatArrow type={changeStatArrow} />\n                {totalPercentages} %\n            </Heading>\n            </StatHelpText>\n          </Stat>\n        </StatGroup>\n      </Box>\n    </Container>\n  )\n}\n\nexport default EarningsExpenseInfo"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}